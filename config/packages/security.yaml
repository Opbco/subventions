security:
  enable_authenticator_manager: true
  password_hashers:
    Sonata\UserBundle\Model\UserInterface:
      algorithm: auto
  providers:
    sonata_user_bundle:
      id: sonata.user.security.user_provider
  access_decision_manager:
    strategy: unanimous

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    admin:
      lazy: true
      pattern: /admin(.*)
      provider: sonata_user_bundle
      context: user
      switch_user: true
      form_login:
        login_path: sonata_user_admin_security_login
        check_path: sonata_user_admin_security_check
        success_handler: App\Security\FirstLoginHandler
        default_target_path: sonata_admin_dashboard
      logout:
        path: sonata_user_admin_security_logout
        target: sonata_user_admin_security_login
      remember_me:
        secret: "%env(APP_SECRET)%"
        lifetime: 2629746
        path: /admin

    login:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
      pattern: ^/api
      stateless: true
      jwt: ~

    main:
      lazy: true
      provider: sonata_user_bundle
      custom_authenticator: App\Security\UsersAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/login_check, roles: PUBLIC_ACCESS }
    - { path: ^/api/register, roles: PUBLIC_ACCESS }
    - { path: ^/api/reset, roles: PUBLIC_ACCESS }
    - { path: ^/api/open.*$, roles: PUBLIC_ACCESS }
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/admin/login$, role: PUBLIC_ACCESS }
    - { path: ^/admin/logout$, role: PUBLIC_ACCESS }
    - { path: ^/admin/login_check$, role: PUBLIC_ACCESS }
    - { path: ^/admin/request$, role: PUBLIC_ACCESS }
    - { path: ^/admin/check-email$, role: PUBLIC_ACCESS }
    - { path: ^/admin/reset/.*$, role: PUBLIC_ACCESS }
    - { path: ^/admin/, role: ROLE_ADMIN }
    - { path: ^/login$, role: PUBLIC_ACCESS }
    - { path: ^/.*, role: PUBLIC_ACCESS }

  role_hierarchy:
    ROLE_ADMIN:
      - ROLE_USER
      - ROLE_SONATA_ADMIN
      - ROLE_SONATA_USER_ADMIN_USER_VIEW
    ROLE_COMMISSION_DESG:
      - ROLE_ADMIN
      - ROLE_ADMIN_STRUCTURE_ALL
      - ROLE_ADMIN_DEMANDE_TRANSMISE_EDIT
      - ROLE_ADMIN_DEMANDE_TRANSMISE_VIEW
      - ROLE_ADMIN_DEMANDE_TRANSMISE_LIST
      - ROLE_ADMIN_DEMANDE_TRANSMISE_EXPORT
      - ROLE_ADMIN_DEMANDE_REJETEE_VIEW
      - ROLE_ADMIN_DEMANDE_REJETEE_LIST
      - ROLE_ADMIN_DEMANDE_REJETEE_EXPORT
      - ROLE_ADMIN_DEMANDE_NOTEE_VIEW
      - ROLE_ADMIN_DEMANDE_NOTEE_LIST
      - ROLE_ADMIN_DEMANDE_NOTEE_EXPORT
      - ROLE_ADMIN_DEMANDE_VALIDEE_VIEW
      - ROLE_ADMIN_DEMANDE_VALIDEE_LIST
      - ROLE_ADMIN_DEMANDE_VALIDEE_EXPORT
      - ROLE_ADMIN_COMPTE_BANCAIRE_EDIT
      - ROLE_ADMIN_COMPTE_BANCAIRE_VIEW
      - ROLE_ADMIN_COMPTE_BANCAIRE_LIST
      - ROLE_ADMIN_COMPTE_BANCAIRE_EXPORT
    ROLE_ADMIN_DESG:
      - ROLE_COMMISSION_DESG
      - ROLE_ADMIN_DEMANDE_REJETEE_EDIT
      - ROLE_ADMIN_DEMANDE_NOTEE_EDIT
      - ROLE_ADMIN_DEMANDE_EDIT
      - ROLE_ADMIN_DEMANDE_VIEW
      - ROLE_ADMIN_DEMANDE_LIST
      - ROLE_ADMIN_DEMANDE_EXPORT
    ROLE_COMMISSION_DEN:
      - ROLE_ADMIN
      - ROLE_ADMIN_STRUCTURE_ALL
      - ROLE_ADMIN_DEMANDE_TRANSMISE_EDIT
      - ROLE_ADMIN_DEMANDE_TRANSMISE_VIEW
      - ROLE_ADMIN_DEMANDE_TRANSMISE_LIST
      - ROLE_ADMIN_DEMANDE_TRANSMISE_EXPORT
      - ROLE_ADMIN_DEMANDE_REJETEE_VIEW
      - ROLE_ADMIN_DEMANDE_REJETEE_LIST
      - ROLE_ADMIN_DEMANDE_REJETEE_EXPORT
      - ROLE_ADMIN_DEMANDE_NOTEE_VIEW
      - ROLE_ADMIN_DEMANDE_NOTEE_LIST
      - ROLE_ADMIN_DEMANDE_NOTEE_EXPORT
      - ROLE_ADMIN_DEMANDE_VALIDEE_VIEW
      - ROLE_ADMIN_DEMANDE_VALIDEE_LIST
      - ROLE_ADMIN_DEMANDE_VALIDEE_EXPORT
      - ROLE_ADMIN_COMPTE_BANCAIRE_EDIT
      - ROLE_ADMIN_COMPTE_BANCAIRE_VIEW
      - ROLE_ADMIN_COMPTE_BANCAIRE_LIST
      - ROLE_ADMIN_COMPTE_BANCAIRE_EXPORT
    ROLE_ADMIN_DEN:
      - ROLE_COMMISSION_DEN
      - ROLE_ADMIN_DEMANDE_REJETEE_EDIT
      - ROLE_ADMIN_DEMANDE_NOTEE_EDIT
      - ROLE_ADMIN_DEMANDE_EDIT
      - ROLE_ADMIN_DEMANDE_VIEW
      - ROLE_ADMIN_DEMANDE_LIST
      - ROLE_ADMIN_DEMANDE_EXPORT
    ROLE_COMMISSION_DESTP:
      - ROLE_ADMIN
      - ROLE_ADMIN_STRUCTURE_ALL
      - ROLE_ADMIN_DEMANDE_TRANSMISE_EDIT
      - ROLE_ADMIN_DEMANDE_TRANSMISE_VIEW
      - ROLE_ADMIN_DEMANDE_TRANSMISE_LIST
      - ROLE_ADMIN_DEMANDE_TRANSMISE_EXPORT
      - ROLE_ADMIN_DEMANDE_REJETEE_VIEW
      - ROLE_ADMIN_DEMANDE_REJETEE_LIST
      - ROLE_ADMIN_DEMANDE_REJETEE_EXPORT
      - ROLE_ADMIN_DEMANDE_NOTEE_VIEW
      - ROLE_ADMIN_DEMANDE_NOTEE_LIST
      - ROLE_ADMIN_DEMANDE_NOTEE_EXPORT
      - ROLE_ADMIN_DEMANDE_VALIDEE_VIEW
      - ROLE_ADMIN_DEMANDE_VALIDEE_LIST
      - ROLE_ADMIN_DEMANDE_VALIDEE_EXPORT
      - ROLE_ADMIN_COMPTE_BANCAIRE_EDIT
      - ROLE_ADMIN_COMPTE_BANCAIRE_VIEW
      - ROLE_ADMIN_COMPTE_BANCAIRE_LIST
      - ROLE_ADMIN_COMPTE_BANCAIRE_EXPORT
    ROLE_ADMIN_DESTP:
      - ROLE_COMMISSION_DESTP
      - ROLE_ADMIN_DEMANDE_REJETEE_EDIT
      - ROLE_ADMIN_DEMANDE_NOTEE_EDIT
      - ROLE_ADMIN_DEMANDE_EDIT
      - ROLE_ADMIN_DEMANDE_VIEW
      - ROLE_ADMIN_DEMANDE_LIST
      - ROLE_ADMIN_DEMANDE_EXPORT
    ROLE_ADMIN_CELINFO:
      - ROLE_ADMIN_DESTP
    ROLE_SUPER_ADMIN:
      - ROLE_ADMIN
      - ROLE_ADMIN_CELINFO
      - ROLE_ADMIN_DESTP
      - ROLE_ADMIN_DEN
      - ROLE_ADMIN_DESG
      - ROLE_COMMISSION_DESTP
      - ROLE_COMMISSION_DEN
      - ROLE_COMMISSION_DESG
      - ROLE_ALLOWED_TO_SWITCH

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
